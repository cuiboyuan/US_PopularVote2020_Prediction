broom::tidy(model_biden)
survey_data = within(survey_data, race <- relevel(as.factor(race), ref = 7)) # make Single marital status as reference
# Creating the Model
model_trump <- glm(vote_trump ~ age + gender + state + race + education_level + income_level,
data=survey_data, family= "binomial")
# Model Results (to Report in Results section)
# summary(model)
# OR
# Creating the Model
model_biden <- glm(vote_biden ~ age + gender + state + race + education_level + income_level,
data=survey_data, family= "binomial")
# Model Results (to Report in Results section)
# summary(model)
# OR
broom::tidy(model_biden)
broom::tidy(model_trump)
# Model Results (to Report in Results section)
# summary(model)
# OR
broom::tidy(model_biden)
# Model Results (to Report in Results section)
# summary(model)
# OR
broom::tidy(model_biden)
broom::tidy(model_trump)
View(survey_data)
suvery_data %>% group_by(state) %>% summarise(n())
# Loading in the cleaned survey Data
survey_data <- read_csv("outputs/survey_data.csv")
# Loading in the cleaned census Data
census_data <- read_csv("outputs/census_data.csv")
suvery_data %>% group_by(state) %>% summarise(n())
survey_data %>% group_by(state) %>% summarise(n())
sth <- survey_data %>% group_by(state) %>% summarise(n())
View(sth)
knitr::opts_chunk$set(echo = FALSE)
library(tidyverse)
# Loading in the cleaned survey Data
survey_data <- read_csv("outputs/survey_data.csv")
# Loading in the cleaned census Data
census_data <- read_csv("outputs/census_data.csv")
states <- as.factor(census_data$state) %>% levels()
voters <- c(9,3,11,6,55,9,7,3,3,29,16,4,4,20,11,6,6,8,8,4,10,11,16,10,6,10,3,5,6,4,14,5,29,15,3,18,7,7,20,4,9,3,11,38,6,3,13,12,5,10,3)
vote_data <- data.frame(states, voters)
trump <- rep(0, 51)
biden <- rep(0, 51)
vote_data <- mutate(vote_data, trump)
vote_data <- mutate(vote_data, biden)
trump_vote <- rep(0, 51)
biden_vote <- rep(0, 51)
vote_data <- mutate(vote_data, trump_vote)
vote_data <- mutate(vote_data, biden_vote)
for (i in 1:51){
sta = states[i]
elector = voters[i]
elector = elector %>% as.integer()
state_data <- census_data %>% filter(state==sta)
state_data$logodds_estimate <-
model_trump %>%
predict(newdata = state_data)
state_data$estimate <-
exp(state_data$logodds_estimate)/(1+exp(state_data$logodds_estimate))
attach(state_data)
alp_predict_prop = estimate*n
vote_data$trump[i] = 100*(sum(alp_predict_prop)/sum(n)) %>% round(digits = 6)
detach(state_data)
state_data2 <- census_data %>% filter(state==sta)
state_data2$logodds_estimate <-
model_biden %>%
predict(newdata = state_data2)
state_data2$estimate <-
exp(state_data2$logodds_estimate)/(1+exp(state_data2$logodds_estimate))
attach(state_data2)
alp_predict_prop = estimate*n
vote_data$biden[i] = 100*(sum(alp_predict_prop)/sum(n)) %>% round(digits = 6)
detach(state_data2)
if (abs(vote_data$trump[i] - vote_data$biden[i])<=4){
#print(sta)
}
if (sta == 'maine' | sta == 'nebraska'){
joe = (elector * vote_data$biden[i] / 100) %>% round()
donald = (elector * vote_data$trump[i] / 100) %>% round()
if ((joe + donald)!=elector){
if (joe > donald){
vote_data$biden_vote[i] <- joe + 1
vote_data$trump_vote[i] <- donald
} else {
vote_data$trump_vote[i] <- donald + 1
vote_data$biden_vote[i] <- joe
}
} else {
vote_data$biden_vote[i] <- joe
vote_data$trump_vote[i] <- donald
}
} else {
if (vote_data$biden[i]>vote_data$trump[i]){
vote_data$biden_vote[i] <- elector
} else {
vote_data$trump_vote[i] <- elector
}
}
}
data.frame(biden=sum(vote_data$biden_vote),trump=sum(vote_data$trump_vote))
survey_data = within(survey_data, race <- relevel(as.factor(race), ref = 7)) # make Single marital status as reference
# Creating the Model
model_trump <- glm(vote_trump ~ age + gender + race + education_level + income_level,
data=survey_data, family= "binomial")
# Creating the Model
model_biden <- glm(vote_biden ~ age + gender + race + education_level + income_level,
data=survey_data, family= "binomial")
states <- as.factor(census_data$state) %>% levels()
voters <- c(9,3,11,6,55,9,7,3,3,29,16,4,4,20,11,6,6,8,8,4,10,11,16,10,6,10,3,5,6,4,14,5,29,15,3,18,7,7,20,4,9,3,11,38,6,3,13,12,5,10,3)
vote_data <- data.frame(states, voters)
trump <- rep(0, 51)
biden <- rep(0, 51)
vote_data <- mutate(vote_data, trump)
vote_data <- mutate(vote_data, biden)
trump_vote <- rep(0, 51)
biden_vote <- rep(0, 51)
vote_data <- mutate(vote_data, trump_vote)
vote_data <- mutate(vote_data, biden_vote)
for (i in 1:51){
sta = states[i]
elector = voters[i]
elector = elector %>% as.integer()
state_data <- census_data %>% filter(state==sta)
state_data$logodds_estimate <-
model_trump %>%
predict(newdata = state_data)
state_data$estimate <-
exp(state_data$logodds_estimate)/(1+exp(state_data$logodds_estimate))
attach(state_data)
alp_predict_prop = estimate*n
vote_data$trump[i] = 100*(sum(alp_predict_prop)/sum(n)) %>% round(digits = 6)
detach(state_data)
state_data2 <- census_data %>% filter(state==sta)
state_data2$logodds_estimate <-
model_biden %>%
predict(newdata = state_data2)
state_data2$estimate <-
exp(state_data2$logodds_estimate)/(1+exp(state_data2$logodds_estimate))
attach(state_data2)
alp_predict_prop = estimate*n
vote_data$biden[i] = 100*(sum(alp_predict_prop)/sum(n)) %>% round(digits = 6)
detach(state_data2)
if (abs(vote_data$trump[i] - vote_data$biden[i])<=4){
#print(sta)
}
if (sta == 'maine' | sta == 'nebraska'){
joe = (elector * vote_data$biden[i] / 100) %>% round()
donald = (elector * vote_data$trump[i] / 100) %>% round()
if ((joe + donald)!=elector){
if (joe > donald){
vote_data$biden_vote[i] <- joe + 1
vote_data$trump_vote[i] <- donald
} else {
vote_data$trump_vote[i] <- donald + 1
vote_data$biden_vote[i] <- joe
}
} else {
vote_data$biden_vote[i] <- joe
vote_data$trump_vote[i] <- donald
}
} else {
if (vote_data$biden[i]>vote_data$trump[i]){
vote_data$biden_vote[i] <- elector
} else {
vote_data$trump_vote[i] <- elector
}
}
}
data.frame(biden=sum(vote_data$biden_vote),trump=sum(vote_data$trump_vote))
states <- as.factor(census_data$state) %>% levels()
voters <- c(9,3,11,6,55,9,7,3,3,29,16,4,4,20,11,6,6,8,8,4,10,11,16,10,6,10,3,5,6,4,14,5,29,15,3,18,7,7,20,4,9,3,11,38,6,3,13,12,5,10,3)
vote_data <- data.frame(states, voters)
trump <- rep(0, 51)
biden <- rep(0, 51)
vote_data <- mutate(vote_data, trump)
vote_data <- mutate(vote_data, biden)
trump_vote <- rep(0, 51)
biden_vote <- rep(0, 51)
vote_data <- mutate(vote_data, trump_vote)
vote_data <- mutate(vote_data, biden_vote)
for (i in 1:51){
sta = states[i]
elector = voters[i]
elector = elector %>% as.integer()
state_data <- census_data %>% filter(state==sta)
state_data$logodds_estimate <-
model_trump %>%
predict(newdata = state_data)
state_data$estimate <-
exp(state_data$logodds_estimate)/(1+exp(state_data$logodds_estimate))
attach(state_data)
alp_predict_prop = estimate*n
vote_data$trump[i] = 100*(sum(alp_predict_prop)/sum(n)) %>% round(digits = 6)
detach(state_data)
state_data2 <- census_data %>% filter(state==sta)
state_data2$logodds_estimate <-
model_biden %>%
predict(newdata = state_data2)
state_data2$estimate <-
exp(state_data2$logodds_estimate)/(1+exp(state_data2$logodds_estimate))
attach(state_data2)
alp_predict_prop = estimate*n
vote_data$biden[i] = 100*(sum(alp_predict_prop)/sum(n)) %>% round(digits = 6)
detach(state_data2)
if (abs(vote_data$trump[i] - vote_data$biden[i])<=4){
print(sta)
}
if (sta == 'maine' | sta == 'nebraska'){
joe = (elector * vote_data$biden[i] / 100) %>% round()
donald = (elector * vote_data$trump[i] / 100) %>% round()
if ((joe + donald)!=elector){
if (joe > donald){
vote_data$biden_vote[i] <- joe + 1
vote_data$trump_vote[i] <- donald
} else {
vote_data$trump_vote[i] <- donald + 1
vote_data$biden_vote[i] <- joe
}
} else {
vote_data$biden_vote[i] <- joe
vote_data$trump_vote[i] <- donald
}
} else {
if (vote_data$biden[i]>vote_data$trump[i]){
vote_data$biden_vote[i] <- elector
} else {
vote_data$trump_vote[i] <- elector
}
}
}
data.frame(biden=sum(vote_data$biden_vote),trump=sum(vote_data$trump_vote))
survey_data = within(survey_data, race <- relevel(as.factor(race), ref = 7)) # make Single marital status as reference
# Creating the Model
model_trump <- glm(vote_trump ~ age + gender + state + race + education_level + income_level,
data=survey_data, family= "binomial")
# Model Results (to Report in Results section)
# summary(model)
# OR
# Creating the Model
model_biden <- glm(vote_biden ~ age + gender + state + race + education_level + income_level,
data=survey_data, family= "binomial")
# Model Results (to Report in Results section)
# summary(model)
# OR
broom::tidy(model_biden)
broom::tidy(model_trump)
# Here I will perform the post-stratification calculation
census_data$logodds_estimate <-
model %>%
predict(newdata = census_data)
states <- as.factor(census_data$state) %>% levels()
voters <- c(9,3,11,6,55,9,7,3,3,29,16,4,4,20,11,6,6,8,8,4,10,11,16,10,6,10,3,5,6,4,14,5,29,15,3,18,7,7,20,4,9,3,11,38,6,3,13,12,5,10,3)
vote_data <- data.frame(states, voters)
trump <- rep(0, 51)
biden <- rep(0, 51)
vote_data <- mutate(vote_data, trump)
vote_data <- mutate(vote_data, biden)
trump_vote <- rep(0, 51)
biden_vote <- rep(0, 51)
vote_data <- mutate(vote_data, trump_vote)
vote_data <- mutate(vote_data, biden_vote)
for (i in 1:51){
sta = states[i]
elector = voters[i]
elector = elector %>% as.integer()
state_data <- census_data %>% filter(state==sta)
state_data$logodds_estimate <-
model_trump %>%
predict(newdata = state_data)
state_data$estimate <-
exp(state_data$logodds_estimate)/(1+exp(state_data$logodds_estimate))
attach(state_data)
alp_predict_prop = estimate*n
vote_data$trump[i] = 100*(sum(alp_predict_prop)/sum(n)) %>% round(digits = 6)
detach(state_data)
state_data2 <- census_data %>% filter(state==sta)
state_data2$logodds_estimate <-
model_biden %>%
predict(newdata = state_data2)
state_data2$estimate <-
exp(state_data2$logodds_estimate)/(1+exp(state_data2$logodds_estimate))
attach(state_data2)
alp_predict_prop = estimate*n
vote_data$biden[i] = 100*(sum(alp_predict_prop)/sum(n)) %>% round(digits = 6)
detach(state_data2)
if (abs(vote_data$trump[i] - vote_data$biden[i])<=4){
print(sta)
}
if (sta == 'maine' | sta == 'nebraska'){
joe = (elector * vote_data$biden[i] / 100) %>% round()
donald = (elector * vote_data$trump[i] / 100) %>% round()
if ((joe + donald)!=elector){
if (joe > donald){
vote_data$biden_vote[i] <- joe + 1
vote_data$trump_vote[i] <- donald
} else {
vote_data$trump_vote[i] <- donald + 1
vote_data$biden_vote[i] <- joe
}
} else {
vote_data$biden_vote[i] <- joe
vote_data$trump_vote[i] <- donald
}
} else {
if (vote_data$biden[i]>vote_data$trump[i]){
vote_data$biden_vote[i] <- elector
} else {
vote_data$trump_vote[i] <- elector
}
}
}
data.frame(biden=sum(vote_data$biden_vote),trump=sum(vote_data$trump_vote))
survey_data = within(survey_data, race <- relevel(as.factor(race), ref = 7)) # make Single marital status as reference
# Creating the Model
model_trump <- glm(vote_trump ~ age + gender + race + education_level + income_level,
data=survey_data, family= "binomial")
# Creating the Model
model_biden <- glm(vote_biden ~ age + gender + race + education_level + income_level,
data=survey_data, family= "binomial")
states <- as.factor(census_data$state) %>% levels()
voters <- c(9,3,11,6,55,9,7,3,3,29,16,4,4,20,11,6,6,8,8,4,10,11,16,10,6,10,3,5,6,4,14,5,29,15,3,18,7,7,20,4,9,3,11,38,6,3,13,12,5,10,3)
vote_data <- data.frame(states, voters)
trump <- rep(0, 51)
biden <- rep(0, 51)
vote_data <- mutate(vote_data, trump)
vote_data <- mutate(vote_data, biden)
trump_vote <- rep(0, 51)
biden_vote <- rep(0, 51)
vote_data <- mutate(vote_data, trump_vote)
vote_data <- mutate(vote_data, biden_vote)
for (i in 1:51){
sta = states[i]
elector = voters[i]
elector = elector %>% as.integer()
state_data <- census_data %>% filter(state==sta)
state_data$logodds_estimate <-
model_trump %>%
predict(newdata = state_data)
state_data$estimate <-
exp(state_data$logodds_estimate)/(1+exp(state_data$logodds_estimate))
attach(state_data)
alp_predict_prop = estimate*n
vote_data$trump[i] = 100*(sum(alp_predict_prop)/sum(n)) %>% round(digits = 6)
detach(state_data)
state_data2 <- census_data %>% filter(state==sta)
state_data2$logodds_estimate <-
model_biden %>%
predict(newdata = state_data2)
state_data2$estimate <-
exp(state_data2$logodds_estimate)/(1+exp(state_data2$logodds_estimate))
attach(state_data2)
alp_predict_prop = estimate*n
vote_data$biden[i] = 100*(sum(alp_predict_prop)/sum(n)) %>% round(digits = 6)
detach(state_data2)
if (abs(vote_data$trump[i] - vote_data$biden[i])<=4){
print(sta)
}
if (sta == 'maine' | sta == 'nebraska'){
joe = (elector * vote_data$biden[i] / 100) %>% round()
donald = (elector * vote_data$trump[i] / 100) %>% round()
if ((joe + donald)!=elector){
if (joe > donald){
vote_data$biden_vote[i] <- joe + 1
vote_data$trump_vote[i] <- donald
} else {
vote_data$trump_vote[i] <- donald + 1
vote_data$biden_vote[i] <- joe
}
} else {
vote_data$biden_vote[i] <- joe
vote_data$trump_vote[i] <- donald
}
} else {
if (vote_data$biden[i]>vote_data$trump[i]){
vote_data$biden_vote[i] <- elector
} else {
vote_data$trump_vote[i] <- elector
}
}
}
data.frame(biden=sum(vote_data$biden_vote),trump=sum(vote_data$trump_vote))
states <- as.factor(census_data$state) %>% levels()
voters <- c(9,3,11,6,55,9,7,3,3,29,16,4,4,20,11,6,6,8,8,4,10,11,16,10,6,10,3,5,6,4,14,5,29,15,3,18,7,7,20,4,9,3,11,38,6,3,13,12,5,10,3)
vote_data <- data.frame(states, voters)
trump <- rep(0, 51)
biden <- rep(0, 51)
vote_data <- mutate(vote_data, trump)
vote_data <- mutate(vote_data, biden)
trump_vote <- rep(0, 51)
biden_vote <- rep(0, 51)
vote_data <- mutate(vote_data, trump_vote)
vote_data <- mutate(vote_data, biden_vote)
difference <- rep(0,51)
vote_data <- mutate(vote_data, difference)
for (i in 1:51){
sta = states[i]
elector = voters[i]
elector = elector %>% as.integer()
state_data <- census_data %>% filter(state==sta)
state_data$logodds_estimate <-
model_trump %>%
predict(newdata = state_data)
state_data$estimate <-
exp(state_data$logodds_estimate)/(1+exp(state_data$logodds_estimate))
attach(state_data)
alp_predict_prop = estimate*n
vote_data$trump[i] = 100*(sum(alp_predict_prop)/sum(n)) %>% round(digits = 6)
detach(state_data)
state_data2 <- census_data %>% filter(state==sta)
state_data2$logodds_estimate <-
model_biden %>%
predict(newdata = state_data2)
state_data2$estimate <-
exp(state_data2$logodds_estimate)/(1+exp(state_data2$logodds_estimate))
attach(state_data2)
alp_predict_prop = estimate*n
vote_data$biden[i] = 100*(sum(alp_predict_prop)/sum(n)) %>% round(digits = 6)
detach(state_data2)
vote_data$difference[i] = abs(vote_data$trump[i] - vote_data$biden[i])
if (sta == 'maine' | sta == 'nebraska'){
joe = (elector * vote_data$biden[i] / 100) %>% round()
donald = (elector * vote_data$trump[i] / 100) %>% round()
if ((joe + donald)!=elector){
if (joe > donald){
vote_data$biden_vote[i] <- joe + 1
vote_data$trump_vote[i] <- donald
} else {
vote_data$trump_vote[i] <- donald + 1
vote_data$biden_vote[i] <- joe
}
} else {
vote_data$biden_vote[i] <- joe
vote_data$trump_vote[i] <- donald
}
} else {
if (vote_data$biden[i]>vote_data$trump[i]){
vote_data$biden_vote[i] <- elector
} else {
vote_data$trump_vote[i] <- elector
}
}
}
data.frame(biden=sum(vote_data$biden_vote),trump=sum(vote_data$trump_vote))
library(tidyverse)
# Loading in the cleaned survey Data
survey_data <- read_csv("outputs/survey_data.csv")
# Loading in the cleaned census Data
census_data <- read_csv("outputs/census_data.csv")
# Here I will perform the post-stratification calculation
# Post-stratification for Trump
census_data$logodds_estimate <-
model_trump %>%
predict(newdata = census_data)
census_data$estimate <-
exp(census_data$logodds_estimate)/(1+exp(census_data$logodds_estimate))
census_data %>%
mutate(alp_predict_prop = estimate*n) %>% group_by(age) %>%
summarise(alp_predict = sum(alp_predict_prop)/sum(n),lower = quantile(alp_predict, 0.025),
upper = quantile(alp_predict, 0.975))
# Post-stratification for Biden
census_data$logodds_estimate <-
model_biden %>%
predict(newdata = census_data)
census_data$estimate <-
exp(census_data$logodds_estimate)/(1+exp(census_data$logodds_estimate))
census_data %>%
mutate(alp_predict_prop = estimate*n) %>% group_by(age) %>%
summarise(alp_predict = sum(alp_predict_prop)/sum(n),lower = quantile(alp_predict, 0.025),
upper = quantile(alp_predict, 0.975))
survey_data = within(survey_data, race <- relevel(as.factor(race), ref = 7)) # make Single marital status as reference
# Creating the Model
model_trump <- glm(vote_trump ~ age + gender + state + race + education_level + income_level,
data=survey_data, family= "binomial")
# Model Results (to Report in Results section)
# summary(model)
# OR
# Creating the Model
model_biden <- glm(vote_biden ~ age + gender + state + race + education_level + income_level,
data=survey_data, family= "binomial")
# Model Results (to Report in Results section)
# summary(model)
# OR
broom::tidy(model_biden)
broom::tidy(model_trump)
# Model Results (to Report in Results section)
# summary(model)
# OR
broom::tidy(model_biden)
# Here I will perform the post-stratification calculation
# Post-stratification for Trump
census_data$logodds_estimate <-
model_trump %>%
predict(newdata = census_data)
census_data$estimate <-
exp(census_data$logodds_estimate)/(1+exp(census_data$logodds_estimate))
census_data %>%
mutate(alp_predict_prop = estimate*n) %>% group_by(age, gender, state, race, education_level, income_level) %>%
summarise(alp_predict = sum(alp_predict_prop)/sum(n),lower = quantile(alp_predict, 0.025),
upper = quantile(alp_predict, 0.975))
# Post-stratification for Biden
census_data$logodds_estimate <-
model_biden %>%
predict(newdata = census_data)
census_data$estimate <-
exp(census_data$logodds_estimate)/(1+exp(census_data$logodds_estimate))
census_data %>%
mutate(alp_predict_prop = estimate*n) %>% group_by(age, gender, state, race, education_level, income_level) %>%
summarise(alp_predict = sum(alp_predict_prop)/sum(n),lower = quantile(alp_predict, 0.025),
upper = quantile(alp_predict, 0.975))
